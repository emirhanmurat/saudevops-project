def COLOR_MAP = [
    'SUCCESS': 'good', 
    'FAILURE': 'danger',
]
pipeline {
    agent {label 'docker'}
    tools {
        //maven "MAVEN3"
        jdk "TemurinJDK17"
    }
    
 environment {
        /*SNAP_REPO = 'maven-snapshots'
		NEXUS_USER = 'admin'
		NEXUS_PASS = '[F7s0W@dImFRt1rN`AT,'
		RELEASE_REPO = 'maven-releases'
		CENTRAL_REPO = 'maven-central'
		NEXUSIP = '192.168.1.128'
		NEXUSPORT = '8081'
		NEXUS_GRP_REPO = 'maven-public'
        NEXUS_LOGIN = 'nexuslogin'
        SONARSERVER = 'sonarserver'
        SONARSCANNER = 'sonarscanner'
        //DOCKER_HOST = "tcp://13.49.57.199:2375"*/
        registryCredential = "ecr:eu-north-1:awscred"
        appRegistry = "673942022022.dkr.ecr.eu-north-1.amazonaws.com/saudevopsimg"
        vprofileRegistry = "https://673942022022.dkr.ecr.eu-north-1.amazonaws.com"
    }
     stages {
        stage('Build App Image') {
            steps {
                script {
                    dockerImage = docker.build( appRegistry + ":$BUILD_NUMBER", "./Docker-files/app/multistage/")
                }
            }
        }
        
        stage('Upload App Image') {
          steps{
            script {
              docker.withRegistry( vprofileRegistry, registryCredential ) {
                dockerImage.push("$BUILD_NUMBER")
                dockerImage.push('latest')
              }
            }
          }
        }

    post {
        always {
            echo 'Slack Notifications.'
            slackSend channel: '#jenkinscicd',
                color: COLOR_MAP[currentBuild.currentResult],
                message: "*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER} \n More info at: ${env.BUILD_URL}"
        }
    }
}
}